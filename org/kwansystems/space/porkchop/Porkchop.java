package org.kwansystems.space.porkchop;

import org.kwansystems.space.kepler.*;
import org.kwansystems.space.ephemeris.earth.*;
import org.kwansystems.space.planet.*;
import org.kwansystems.tools.time.*;
import org.kwansystems.tools.vector.*;
import org.kwansystems.tools.rotation.*;
import java.awt.*;
import javax.swing.*;
import org.kwansystems.tools.chart.*;


/**
 *
 * @author  chrisj
 */
public class Porkchop extends javax.swing.JPanel implements PorkchopUI {
  PorkchopModel model;
  Rotator EquToEcl=EarthRotIAU1980.J2000FK52Ecl.getRotation(new Time());
    /** Creates new form PorkchopGUI2 */
    public Porkchop() {
      initComponents();
      model=new PorkchopModel();
      model.addView(this);
      setModelVals();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    kOrbitCanvas1 = new org.kwansystems.space.porkchop.KOrbitCanvas();
    panRight = new javax.swing.JPanel();
    panOptimize = new javax.swing.JPanel();
    chkFreezeDepart = new javax.swing.JCheckBox();
    chkFreezeArrive = new javax.swing.JCheckBox();
    btnOptDVesc = new javax.swing.JButton();
    btnOptC3 = new javax.swing.JButton();
    lblDepartWeight = new javax.swing.JLabel();
    spnDepartWeight = new javax.swing.JSpinner();
    lblDepartWeight1 = new javax.swing.JLabel();
    spnArriveWeight = new javax.swing.JSpinner();
    panTerminals = new javax.swing.JPanel();
    lblDepartPlanet = new javax.swing.JLabel();
    cboDepartPlanet = new javax.swing.JComboBox();
    lblArrivePlanet = new javax.swing.JLabel();
    cboArrivePlanet = new javax.swing.JComboBox();
    lblPeriapse = new javax.swing.JLabel();
    spnDepartPeriapse = new javax.swing.JSpinner();
    spnArrivePeriapse = new javax.swing.JSpinner();
    panLaunchWindow = new javax.swing.JPanel();
    spnLaunchWindow = new javax.swing.JSpinner();
    lblLaunchWindow = new javax.swing.JLabel();
    lblTransferType = new javax.swing.JLabel();
    spnTransferType = new javax.swing.JSpinner();
    panBottom = new javax.swing.JPanel();
    panArrive = new javax.swing.JPanel();
    timArriveTime = new org.kwansystems.tools.time.TimePanel();
    lblArrC3Label = new javax.swing.JLabel();
    lblArrC3 = new javax.swing.JLabel();
    lblDVcapLabel = new javax.swing.JLabel();
    lblDVcap = new javax.swing.JLabel();
    lblArrDVcircLabel = new javax.swing.JLabel();
    lblArrDVcirc = new javax.swing.JLabel();
    lblArrVinfLabel = new javax.swing.JLabel();
    lblArrVinf = new javax.swing.JLabel();
    lblProLabel1 = new javax.swing.JLabel();
    lblPrograde1 = new javax.swing.JLabel();
    panDepart = new javax.swing.JPanel();
    timDepartTime = new org.kwansystems.tools.time.TimePanel();
    lblProLabel = new javax.swing.JLabel();
    lblChPlLabel = new javax.swing.JLabel();
    lblOutLabel = new javax.swing.JLabel();
    lblPrograde = new javax.swing.JLabel();
    lblChPlane = new javax.swing.JLabel();
    lblOutward = new javax.swing.JLabel();
    lblC3 = new javax.swing.JLabel();
    lblC3Label = new javax.swing.JLabel();
    lblDVescLabel = new javax.swing.JLabel();
    lblDVesc = new javax.swing.JLabel();
    lblDVcirc = new javax.swing.JLabel();
    lblDVcircLabel = new javax.swing.JLabel();
    lblDepVinf = new javax.swing.JLabel();
    lblDepVinfLabel = new javax.swing.JLabel();
    panTrans = new javax.swing.JPanel();
    cboTransUnits = new javax.swing.JComboBox();
    lblTransTimeLabel = new javax.swing.JLabel();
    lblTransTime = new javax.swing.JLabel();
    lblTransAngleLabel = new javax.swing.JLabel();
    lblTransAngle = new javax.swing.JLabel();
    lblTransTypeLabel = new javax.swing.JLabel();
    lblTransType = new javax.swing.JLabel();
    panLaunch = new javax.swing.JPanel();
    lblDepLonLabel = new javax.swing.JLabel();
    lblDepLon = new javax.swing.JLabel();
    lblDepLatLabel = new javax.swing.JLabel();
    lblDepLat = new javax.swing.JLabel();
    lblDepDec = new javax.swing.JLabel();
    lblDepRA = new javax.swing.JLabel();
    lblDepRALabel = new javax.swing.JLabel();
    lblDepDecLabel = new javax.swing.JLabel();
    spnLaunchLon = new javax.swing.JSpinner();
    lblLaunchLon = new javax.swing.JLabel();
    lblLaunchLat = new javax.swing.JLabel();
    spnLaunchLat = new javax.swing.JSpinner();
    lblLaunchRALabel = new javax.swing.JLabel();
    lblLaunchRA = new javax.swing.JLabel();
    lblLaunchDecLabel = new javax.swing.JLabel();
    lblLaunchDec = new javax.swing.JLabel();

    setPreferredSize(new java.awt.Dimension(1000, 945));

    kOrbitCanvas1.setMinimumSize(new java.awt.Dimension(400, 400));
    kOrbitCanvas1.setPreferredSize(new java.awt.Dimension(400, 400));

    panRight.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

    panOptimize.setBorder(javax.swing.BorderFactory.createTitledBorder("Optimize"));

    chkFreezeDepart.setText("Freeze Departure Time");
    chkFreezeDepart.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        chkFreezeDepartActionPerformed(evt);
      }
    });

    chkFreezeArrive.setText("Freeze Arrival Time");
    chkFreezeArrive.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        chkFreezeArriveActionPerformed(evt);
      }
    });

    btnOptDVesc.setText("Optimize DVesc");
    btnOptDVesc.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnOptDVescActionPerformed(evt);
      }
    });

    btnOptC3.setText("Optimize C3");
    btnOptC3.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnOptC3ActionPerformed(evt);
      }
    });

    lblDepartWeight.setText("Departure Weight");

    spnDepartWeight.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(0), null, Integer.valueOf(1)));
    spnDepartWeight.addChangeListener(new javax.swing.event.ChangeListener() {
      public void stateChanged(javax.swing.event.ChangeEvent evt) {
        spnDepartWeightStateChanged(evt);
      }
    });

    lblDepartWeight1.setText("Arrival Weight");

    spnArriveWeight.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(0), null, Integer.valueOf(1)));
    spnArriveWeight.addChangeListener(new javax.swing.event.ChangeListener() {
      public void stateChanged(javax.swing.event.ChangeEvent evt) {
        spnArriveWeightStateChanged(evt);
      }
    });

    javax.swing.GroupLayout panOptimizeLayout = new javax.swing.GroupLayout(panOptimize);
    panOptimize.setLayout(panOptimizeLayout);
    panOptimizeLayout.setHorizontalGroup(
      panOptimizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panOptimizeLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(panOptimizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(panOptimizeLayout.createSequentialGroup()
            .addGroup(panOptimizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
              .addGroup(panOptimizeLayout.createSequentialGroup()
                .addComponent(chkFreezeDepart)
                .addGap(18, 18, 18)
                .addComponent(lblDepartWeight))
              .addGroup(panOptimizeLayout.createSequentialGroup()
                .addComponent(chkFreezeArrive)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblDepartWeight1)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(panOptimizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(spnDepartWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(spnArriveWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(243, 243, 243))
          .addGroup(panOptimizeLayout.createSequentialGroup()
            .addGroup(panOptimizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
              .addComponent(btnOptDVesc, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)
              .addComponent(btnOptC3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE))
            .addGap(191, 191, 191)))
        .addContainerGap())
    );
    panOptimizeLayout.setVerticalGroup(
      panOptimizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panOptimizeLayout.createSequentialGroup()
        .addGroup(panOptimizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(chkFreezeDepart)
          .addComponent(lblDepartWeight)
          .addComponent(spnDepartWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(panOptimizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(chkFreezeArrive)
          .addComponent(spnArriveWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(lblDepartWeight1))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(btnOptC3)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(btnOptDVesc)
        .addContainerGap())
    );

    panTerminals.setBorder(javax.swing.BorderFactory.createTitledBorder("Terminals"));

    lblDepartPlanet.setText("Depart planet");

    cboDepartPlanet.setModel(PlanetNames());
    cboDepartPlanet.setSelectedIndex(2);
    cboDepartPlanet.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cboDepartPlanetActionPerformed(evt);
      }
    });

    lblArrivePlanet.setText("Arrive planet");

    cboArrivePlanet.setModel(PlanetNames());
    cboArrivePlanet.setSelectedIndex(1);
    cboArrivePlanet.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cboArrivePlanetActionPerformed(evt);
      }
    });

    lblPeriapse.setText("Periapse (m)");

    spnDepartPeriapse.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(185000), Integer.valueOf(0), null, Integer.valueOf(1000)));
    spnDepartPeriapse.addChangeListener(new javax.swing.event.ChangeListener() {
      public void stateChanged(javax.swing.event.ChangeEvent evt) {
        spnDepartPeriapseStateChanged(evt);
      }
    });

    spnArrivePeriapse.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(185000), Integer.valueOf(0), null, Integer.valueOf(1000)));
    spnArrivePeriapse.addChangeListener(new javax.swing.event.ChangeListener() {
      public void stateChanged(javax.swing.event.ChangeEvent evt) {
        spnArrivePeriapseStateChanged(evt);
      }
    });

    javax.swing.GroupLayout panTerminalsLayout = new javax.swing.GroupLayout(panTerminals);
    panTerminals.setLayout(panTerminalsLayout);
    panTerminalsLayout.setHorizontalGroup(
      panTerminalsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panTerminalsLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(panTerminalsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(lblDepartPlanet)
          .addComponent(lblArrivePlanet))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(panTerminalsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(cboDepartPlanet, 0, 399, Short.MAX_VALUE)
          .addComponent(cboArrivePlanet, 0, 399, Short.MAX_VALUE))
        .addGroup(panTerminalsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(panTerminalsLayout.createSequentialGroup()
            .addGap(6, 6, 6)
            .addComponent(lblPeriapse))
          .addGroup(panTerminalsLayout.createSequentialGroup()
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(panTerminalsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(spnDepartPeriapse, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(spnArrivePeriapse, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
        .addContainerGap())
    );
    panTerminalsLayout.setVerticalGroup(
      panTerminalsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panTerminalsLayout.createSequentialGroup()
        .addComponent(lblPeriapse)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(panTerminalsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(cboDepartPlanet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(spnDepartPeriapse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(lblDepartPlanet))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(panTerminalsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(cboArrivePlanet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(spnArrivePeriapse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(lblArrivePlanet))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    panLaunchWindow.setBorder(javax.swing.BorderFactory.createTitledBorder("Transfer Conditions"));

    spnLaunchWindow.addChangeListener(new javax.swing.event.ChangeListener() {
      public void stateChanged(javax.swing.event.ChangeEvent evt) {
        spnLaunchWindowStateChanged(evt);
      }
    });

    lblLaunchWindow.setText("Launch Window");

    lblTransferType.setText("Transfer Type");

    spnTransferType.setModel(new javax.swing.SpinnerNumberModel());
    spnTransferType.addChangeListener(new javax.swing.event.ChangeListener() {
      public void stateChanged(javax.swing.event.ChangeEvent evt) {
        spnTransferTypeStateChanged(evt);
      }
    });

    javax.swing.GroupLayout panLaunchWindowLayout = new javax.swing.GroupLayout(panLaunchWindow);
    panLaunchWindow.setLayout(panLaunchWindowLayout);
    panLaunchWindowLayout.setHorizontalGroup(
      panLaunchWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panLaunchWindowLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(panLaunchWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(lblTransferType, javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(lblLaunchWindow, javax.swing.GroupLayout.Alignment.TRAILING))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(panLaunchWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(spnLaunchWindow, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(spnTransferType, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap(281, Short.MAX_VALUE))
    );
    panLaunchWindowLayout.setVerticalGroup(
      panLaunchWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panLaunchWindowLayout.createSequentialGroup()
        .addGroup(panLaunchWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(lblLaunchWindow)
          .addComponent(spnLaunchWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(panLaunchWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(lblTransferType)
          .addComponent(spnTransferType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout panRightLayout = new javax.swing.GroupLayout(panRight);
    panRight.setLayout(panRightLayout);
    panRightLayout.setHorizontalGroup(
      panRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panRightLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(panRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(panLaunchWindow, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(panTerminals, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(panOptimize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap())
    );
    panRightLayout.setVerticalGroup(
      panRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panRightLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(panTerminals, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(panLaunchWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(panOptimize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    panBottom.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

    panArrive.setBorder(javax.swing.BorderFactory.createTitledBorder("Arrival Conditions"));

    timArriveTime.addChangeListener(new javax.swing.event.ChangeListener() {
      public void stateChanged(javax.swing.event.ChangeEvent evt) {
        timArriveTimeStateChanged(evt);
      }
    });

    lblArrC3Label.setText("C3 (km^2/s^2)");

    lblArrC3.setBackground(new java.awt.Color(255, 255, 255));
    lblArrC3.setFont(new java.awt.Font("Tahoma", 1, 11));
    lblArrC3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    lblArrC3.setText("jLabel7");
    lblArrC3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    lblArrC3.setOpaque(true);

    lblDVcapLabel.setText("DVcap (m/s)");

    lblDVcap.setBackground(new java.awt.Color(255, 255, 255));
    lblDVcap.setFont(new java.awt.Font("Tahoma", 1, 11));
    lblDVcap.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    lblDVcap.setText("jLabel7");
    lblDVcap.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    lblDVcap.setOpaque(true);

    lblArrDVcircLabel.setText("DVcirc (m/s)");

    lblArrDVcirc.setBackground(new java.awt.Color(255, 255, 255));
    lblArrDVcirc.setFont(new java.awt.Font("Tahoma", 1, 11));
    lblArrDVcirc.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    lblArrDVcirc.setText("jLabel7");
    lblArrDVcirc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    lblArrDVcirc.setOpaque(true);

    lblArrVinfLabel.setText("Vinf (m/s)");

    lblArrVinf.setBackground(new java.awt.Color(255, 255, 255));
    lblArrVinf.setFont(new java.awt.Font("Tahoma", 1, 11));
    lblArrVinf.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    lblArrVinf.setText("jLabel7");
    lblArrVinf.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    lblArrVinf.setOpaque(true);

    lblProLabel1.setText("Prograde (m/s)");

    lblPrograde1.setBackground(new java.awt.Color(255, 255, 255));
    lblPrograde1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
    lblPrograde1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    lblPrograde1.setText("jLabel7");
    lblPrograde1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    lblPrograde1.setOpaque(true);

    javax.swing.GroupLayout panArriveLayout = new javax.swing.GroupLayout(panArrive);
    panArrive.setLayout(panArriveLayout);
    panArriveLayout.setHorizontalGroup(
      panArriveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panArriveLayout.createSequentialGroup()
        .addComponent(timArriveTime, javax.swing.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(lblProLabel1)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(lblPrograde1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(panArriveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addGroup(panArriveLayout.createSequentialGroup()
            .addGroup(panArriveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(lblArrDVcircLabel, javax.swing.GroupLayout.Alignment.TRAILING)
              .addComponent(lblArrC3Label, javax.swing.GroupLayout.Alignment.TRAILING)
              .addComponent(lblDVcapLabel, javax.swing.GroupLayout.Alignment.TRAILING))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(panArriveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(lblArrC3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(lblDVcap, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(lblArrDVcirc, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
          .addGroup(panArriveLayout.createSequentialGroup()
            .addComponent(lblArrVinfLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(lblArrVinf, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addContainerGap())
    );
    panArriveLayout.setVerticalGroup(
      panArriveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panArriveLayout.createSequentialGroup()
        .addGroup(panArriveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(panArriveLayout.createSequentialGroup()
            .addGroup(panArriveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(lblArrC3Label)
              .addComponent(lblArrC3))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(panArriveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(lblDVcapLabel)
              .addComponent(lblDVcap))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(panArriveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(lblArrDVcircLabel)
              .addComponent(lblArrDVcirc))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(panArriveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(lblArrVinf)
              .addComponent(lblArrVinfLabel)))
          .addGroup(panArriveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(lblPrograde1)
            .addComponent(lblProLabel1))
          .addComponent(timArriveTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(11, 11, 11))
    );

    panDepart.setBorder(javax.swing.BorderFactory.createTitledBorder("Departure Conditions"));

    timDepartTime.setTime(new Time(82709.6,TimeUnits.Days,TimeScale.UTC,TimeEpoch.MJD));
    timDepartTime.addChangeListener(new javax.swing.event.ChangeListener() {
      public void stateChanged(javax.swing.event.ChangeEvent evt) {
        timDepartTimeStateChanged(evt);
      }
    });

    lblProLabel.setText("Prograde (m/s)");

    lblChPlLabel.setText("ChPlane (m/s)");

    lblOutLabel.setText("Outward (m/s)");

    lblPrograde.setBackground(new java.awt.Color(255, 255, 255));
    lblPrograde.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
    lblPrograde.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    lblPrograde.setText("jLabel7");
    lblPrograde.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    lblPrograde.setOpaque(true);

    lblChPlane.setBackground(new java.awt.Color(255, 255, 255));
    lblChPlane.setFont(new java.awt.Font("Tahoma", 1, 11));
    lblChPlane.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    lblChPlane.setText("jLabel7");
    lblChPlane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    lblChPlane.setOpaque(true);

    lblOutward.setBackground(new java.awt.Color(255, 255, 255));
    lblOutward.setFont(new java.awt.Font("Tahoma", 1, 11));
    lblOutward.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    lblOutward.setText("jLabel7");
    lblOutward.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    lblOutward.setOpaque(true);

    lblC3.setBackground(new java.awt.Color(255, 255, 255));
    lblC3.setFont(new java.awt.Font("Tahoma", 1, 11));
    lblC3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    lblC3.setText("jLabel7");
    lblC3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    lblC3.setOpaque(true);

    lblC3Label.setText("C3 (km^2/s^2)");

    lblDVescLabel.setText("DVesc (m/s)");

    lblDVesc.setBackground(new java.awt.Color(255, 255, 255));
    lblDVesc.setFont(new java.awt.Font("Tahoma", 1, 11));
    lblDVesc.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    lblDVesc.setText("jLabel7");
    lblDVesc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    lblDVesc.setOpaque(true);

    lblDVcirc.setBackground(new java.awt.Color(255, 255, 255));
    lblDVcirc.setFont(new java.awt.Font("Tahoma", 1, 11));
    lblDVcirc.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    lblDVcirc.setText("jLabel7");
    lblDVcirc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    lblDVcirc.setOpaque(true);

    lblDVcircLabel.setText("DVcirc (m/s)");

    lblDepVinf.setBackground(new java.awt.Color(255, 255, 255));
    lblDepVinf.setFont(new java.awt.Font("Tahoma", 1, 11));
    lblDepVinf.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    lblDepVinf.setText("jLabel7");
    lblDepVinf.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    lblDepVinf.setOpaque(true);

    lblDepVinfLabel.setText("Vinf (m/s)");

    javax.swing.GroupLayout panDepartLayout = new javax.swing.GroupLayout(panDepart);
    panDepart.setLayout(panDepartLayout);
    panDepartLayout.setHorizontalGroup(
      panDepartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panDepartLayout.createSequentialGroup()
        .addComponent(timDepartTime, javax.swing.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(panDepartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addGroup(panDepartLayout.createSequentialGroup()
            .addGroup(panDepartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
              .addComponent(lblOutLabel)
              .addComponent(lblChPlLabel)
              .addComponent(lblProLabel))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(panDepartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(lblOutward, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(lblChPlane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(lblPrograde, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(panDepartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
              .addComponent(lblC3Label)
              .addComponent(lblDVescLabel)
              .addComponent(lblDVcircLabel)))
          .addComponent(lblDepVinfLabel))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(panDepartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(lblC3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(lblDVesc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(lblDVcirc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(lblDepVinf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap())
    );
    panDepartLayout.setVerticalGroup(
      panDepartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panDepartLayout.createSequentialGroup()
        .addGroup(panDepartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(panDepartLayout.createSequentialGroup()
            .addGroup(panDepartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(lblC3)
              .addComponent(lblC3Label))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(panDepartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(lblDVesc)
              .addComponent(lblDVescLabel))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(panDepartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(lblDVcirc)
              .addComponent(lblDVcircLabel))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(panDepartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(lblDepVinf)
              .addComponent(lblDepVinfLabel)))
          .addGroup(panDepartLayout.createSequentialGroup()
            .addGroup(panDepartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(lblPrograde)
              .addComponent(lblProLabel))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(panDepartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(lblChPlane)
              .addComponent(lblChPlLabel))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(panDepartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(lblOutward)
              .addComponent(lblOutLabel)))
          .addComponent(timDepartTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    panTrans.setBorder(javax.swing.BorderFactory.createTitledBorder("Transfer Conditions"));

    cboTransUnits.setModel(new DefaultComboBoxModel(TimeUnits.values()));
    cboTransUnits.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cboTransUnitsactionPerformed(evt);
      }
    });

    lblTransTimeLabel.setText("Transfer Time");

    lblTransTime.setBackground(new java.awt.Color(255, 255, 255));
    lblTransTime.setFont(new java.awt.Font("Tahoma", 1, 11));
    lblTransTime.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    lblTransTime.setText("jLabel7");
    lblTransTime.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    lblTransTime.setOpaque(true);

    lblTransAngleLabel.setText("Transfer Angle (deg)");

    lblTransAngle.setBackground(new java.awt.Color(255, 255, 255));
    lblTransAngle.setFont(new java.awt.Font("Tahoma", 1, 11));
    lblTransAngle.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    lblTransAngle.setText("jLabel7");
    lblTransAngle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    lblTransAngle.setOpaque(true);

    lblTransTypeLabel.setText("Transfer Type");

    lblTransType.setText("Transfer Type");
    lblTransType.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

    javax.swing.GroupLayout panTransLayout = new javax.swing.GroupLayout(panTrans);
    panTrans.setLayout(panTransLayout);
    panTransLayout.setHorizontalGroup(
      panTransLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panTransLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(panTransLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(lblTransAngleLabel)
          .addComponent(lblTransTimeLabel)
          .addComponent(lblTransTypeLabel))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(panTransLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addComponent(lblTransType)
          .addGroup(panTransLayout.createSequentialGroup()
            .addGroup(panTransLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
              .addComponent(lblTransAngle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
              .addComponent(lblTransTime, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(cboTransUnits, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addGap(485, 485, 485))
    );
    panTransLayout.setVerticalGroup(
      panTransLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panTransLayout.createSequentialGroup()
        .addGroup(panTransLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(lblTransTime)
          .addComponent(lblTransTimeLabel)
          .addComponent(cboTransUnits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(panTransLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(lblTransAngleLabel)
          .addComponent(lblTransAngle))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(panTransLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(lblTransTypeLabel)
          .addComponent(lblTransType))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    panLaunch.setBorder(javax.swing.BorderFactory.createTitledBorder("Launch conditions"));

    lblDepLonLabel.setText("Departure Celestial Longitude (deg)");

    lblDepLon.setBackground(new java.awt.Color(255, 255, 255));
    lblDepLon.setFont(new java.awt.Font("Tahoma", 1, 11));
    lblDepLon.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    lblDepLon.setText("jLabel7");
    lblDepLon.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    lblDepLon.setOpaque(true);

    lblDepLatLabel.setText("Departure Celestial Latitude (deg)");

    lblDepLat.setBackground(new java.awt.Color(255, 255, 255));
    lblDepLat.setFont(new java.awt.Font("Tahoma", 1, 11));
    lblDepLat.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    lblDepLat.setText("jLabel7");
    lblDepLat.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    lblDepLat.setOpaque(true);

    lblDepDec.setBackground(new java.awt.Color(255, 255, 255));
    lblDepDec.setFont(new java.awt.Font("Tahoma", 1, 11));
    lblDepDec.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    lblDepDec.setText("jLabel7");
    lblDepDec.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    lblDepDec.setOpaque(true);

    lblDepRA.setBackground(new java.awt.Color(255, 255, 255));
    lblDepRA.setFont(new java.awt.Font("Tahoma", 1, 11));
    lblDepRA.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    lblDepRA.setText("jLabel7");
    lblDepRA.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    lblDepRA.setOpaque(true);

    lblDepRALabel.setText("Departure Right Ascension (deg)");

    lblDepDecLabel.setText("Departure Declination (deg)");

    spnLaunchLon.setModel(new javax.swing.SpinnerNumberModel(-80.0d, -180.0d, 180.0d, 0.1d));
    spnLaunchLon.addChangeListener(new javax.swing.event.ChangeListener() {
      public void stateChanged(javax.swing.event.ChangeEvent evt) {
        spnLaunchLonStateChanged(evt);
      }
    });

    lblLaunchLon.setText("Launch site Longitude (deg)");

    lblLaunchLat.setText("Launch site Latitude (deg)");

    spnLaunchLat.setModel(new javax.swing.SpinnerNumberModel(28.5d, -90.0d, 90.0d, 0.1d));
    spnLaunchLat.addChangeListener(new javax.swing.event.ChangeListener() {
      public void stateChanged(javax.swing.event.ChangeEvent evt) {
        spnLaunchLatStateChanged(evt);
      }
    });

    lblLaunchRALabel.setText("Launch Right Ascension (deg)");

    lblLaunchRA.setBackground(new java.awt.Color(255, 255, 255));
    lblLaunchRA.setFont(new java.awt.Font("Tahoma", 1, 11));
    lblLaunchRA.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    lblLaunchRA.setText("jLabel7");
    lblLaunchRA.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    lblLaunchRA.setOpaque(true);

    lblLaunchDecLabel.setText("Launch Declination (deg)");

    lblLaunchDec.setBackground(new java.awt.Color(255, 255, 255));
    lblLaunchDec.setFont(new java.awt.Font("Tahoma", 1, 11));
    lblLaunchDec.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    lblLaunchDec.setText("jLabel7");
    lblLaunchDec.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    lblLaunchDec.setOpaque(true);

    javax.swing.GroupLayout panLaunchLayout = new javax.swing.GroupLayout(panLaunch);
    panLaunch.setLayout(panLaunchLayout);
    panLaunchLayout.setHorizontalGroup(
      panLaunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panLaunchLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(panLaunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(lblDepLonLabel)
          .addComponent(lblDepLatLabel)
          .addComponent(lblDepRALabel)
          .addComponent(lblDepDecLabel))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(panLaunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(panLaunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
            .addGroup(panLaunchLayout.createSequentialGroup()
              .addGroup(panLaunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lblDepRA, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(lblDepDec, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
              .addGroup(panLaunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lblLaunchRALabel, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(lblLaunchDecLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(lblLaunchLat, javax.swing.GroupLayout.Alignment.TRAILING)))
            .addGroup(panLaunchLayout.createSequentialGroup()
              .addComponent(lblDepLon, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
              .addComponent(lblLaunchLon)))
          .addComponent(lblDepLat, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(panLaunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(spnLaunchLon, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGroup(panLaunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
            .addComponent(lblLaunchDec, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblLaunchRA, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(spnLaunchLat, javax.swing.GroupLayout.Alignment.LEADING)))
        .addContainerGap(441, Short.MAX_VALUE))
    );
    panLaunchLayout.setVerticalGroup(
      panLaunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panLaunchLayout.createSequentialGroup()
        .addGroup(panLaunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(lblDepLonLabel)
          .addComponent(lblDepLon)
          .addComponent(lblLaunchLon)
          .addComponent(spnLaunchLon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(panLaunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(lblDepLatLabel)
          .addComponent(lblDepLat)
          .addComponent(lblLaunchLat)
          .addComponent(spnLaunchLat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(panLaunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(panLaunchLayout.createSequentialGroup()
            .addGroup(panLaunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(lblDepRA)
              .addComponent(lblDepRALabel))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(panLaunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(lblDepDec)
              .addComponent(lblDepDecLabel)))
          .addGroup(panLaunchLayout.createSequentialGroup()
            .addGroup(panLaunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(lblLaunchRALabel)
              .addComponent(lblLaunchRA))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(panLaunchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(lblLaunchDecLabel)
              .addComponent(lblLaunchDec))))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout panBottomLayout = new javax.swing.GroupLayout(panBottom);
    panBottom.setLayout(panBottomLayout);
    panBottomLayout.setHorizontalGroup(
      panBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panBottomLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(panBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(panTrans, javax.swing.GroupLayout.DEFAULT_SIZE, 1027, Short.MAX_VALUE)
          .addComponent(panArrive, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(panDepart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(panLaunch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap())
    );
    panBottomLayout.setVerticalGroup(
      panBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panBottomLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(panDepart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(panArrive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(panTrans, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(panLaunch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(panBottom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addComponent(kOrbitCanvas1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(panRight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(panRight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(kOrbitCanvas1, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(panBottom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap())
    );
  }// </editor-fold>//GEN-END:initComponents

private void chkFreezeDepartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFreezeDepartActionPerformed
  model.setConstrainDepart(chkFreezeDepart.getModel().isSelected());
}//GEN-LAST:event_chkFreezeDepartActionPerformed

private void spnLaunchWindowStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnLaunchWindowStateChanged
  model.setLaunchWindow(((Integer)(spnLaunchWindow.getModel().getValue())).intValue());
}//GEN-LAST:event_spnLaunchWindowStateChanged

private void cboArrivePlanetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboArrivePlanetActionPerformed
  model.setArrivePlanet(1+cboArrivePlanet.getSelectedIndex());
}//GEN-LAST:event_cboArrivePlanetActionPerformed

private void cboDepartPlanetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboDepartPlanetActionPerformed
  model.setDepartPlanet(1+cboDepartPlanet.getSelectedIndex());
}//GEN-LAST:event_cboDepartPlanetActionPerformed

private void timDepartTimeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_timDepartTimeStateChanged
  model.setDepartTime(timDepartTime.getTime());
}//GEN-LAST:event_timDepartTimeStateChanged

private void timArriveTimeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_timArriveTimeStateChanged
  model.setArriveTime(timArriveTime.getTime());
}//GEN-LAST:event_timArriveTimeStateChanged

private void spnDepartPeriapseStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnDepartPeriapseStateChanged
  model.setDepartHp(((Integer)(spnDepartPeriapse.getModel().getValue())).intValue());
}//GEN-LAST:event_spnDepartPeriapseStateChanged

private void spnArrivePeriapseStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnArrivePeriapseStateChanged
  model.setArriveHp(((Integer)(spnArrivePeriapse.getModel().getValue())).intValue());
}//GEN-LAST:event_spnArrivePeriapseStateChanged

private void chkFreezeArriveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFreezeArriveActionPerformed
  model.setConstrainArrive(chkFreezeArrive.getModel().isSelected());
}//GEN-LAST:event_chkFreezeArriveActionPerformed

private void btnOptC3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOptC3ActionPerformed
  model.optimizeC3();
}//GEN-LAST:event_btnOptC3ActionPerformed

private void btnOptDVescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOptDVescActionPerformed
  model.optimizeDVesc();
}//GEN-LAST:event_btnOptDVescActionPerformed

private void spnDepartWeightStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnDepartWeightStateChanged
  model.setDepartWeight(((Integer)(spnDepartWeight.getModel().getValue())).intValue());
}//GEN-LAST:event_spnDepartWeightStateChanged

private void spnArriveWeightStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnArriveWeightStateChanged
  model.setArriveWeight(((Integer)(spnArriveWeight.getModel().getValue())).intValue());
}//GEN-LAST:event_spnArriveWeightStateChanged

private void spnLaunchLonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnLaunchLonStateChanged
// TODO add your handling code here:
}//GEN-LAST:event_spnLaunchLonStateChanged

private void spnLaunchLatStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnLaunchLatStateChanged
// TODO add your handling code here:
}//GEN-LAST:event_spnLaunchLatStateChanged

private void cboTransUnitsactionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTransUnitsactionPerformed
  TimeUnits Udif=(TimeUnits)(cboTransUnits.getModel().getSelectedItem());
  double Tdif=Time.difference(timDepartTime.getTime(), timArriveTime.getTime(), Udif);
  lblTransTime.setText(Udif.Format.format(Tdif));
}//GEN-LAST:event_cboTransUnitsactionPerformed

private void spnTransferTypeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnTransferTypeStateChanged
  model.setTransferType(((Integer)(spnTransferType.getModel().getValue())).intValue());
}//GEN-LAST:event_spnTransferTypeStateChanged

    private ComboBoxModel PlanetNames() {
      String[] S=new String[Planet.PlanetNames.length-1];
      System.arraycopy(Planet.PlanetNames, 1, S, 0, Planet.PlanetNames.length-1);
      return new DefaultComboBoxModel(S);
    }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton btnOptC3;
  private javax.swing.JButton btnOptDVesc;
  private javax.swing.JComboBox cboArrivePlanet;
  private javax.swing.JComboBox cboDepartPlanet;
  private javax.swing.JComboBox cboTransUnits;
  private javax.swing.JCheckBox chkFreezeArrive;
  private javax.swing.JCheckBox chkFreezeDepart;
  private org.kwansystems.space.porkchop.KOrbitCanvas kOrbitCanvas1;
  private javax.swing.JLabel lblArrC3;
  private javax.swing.JLabel lblArrC3Label;
  private javax.swing.JLabel lblArrDVcirc;
  private javax.swing.JLabel lblArrDVcircLabel;
  private javax.swing.JLabel lblArrVinf;
  private javax.swing.JLabel lblArrVinfLabel;
  private javax.swing.JLabel lblArrivePlanet;
  private javax.swing.JLabel lblC3;
  private javax.swing.JLabel lblC3Label;
  private javax.swing.JLabel lblChPlLabel;
  private javax.swing.JLabel lblChPlane;
  private javax.swing.JLabel lblDVcap;
  private javax.swing.JLabel lblDVcapLabel;
  private javax.swing.JLabel lblDVcirc;
  private javax.swing.JLabel lblDVcircLabel;
  private javax.swing.JLabel lblDVesc;
  private javax.swing.JLabel lblDVescLabel;
  private javax.swing.JLabel lblDepDec;
  private javax.swing.JLabel lblDepDecLabel;
  private javax.swing.JLabel lblDepLat;
  private javax.swing.JLabel lblDepLatLabel;
  private javax.swing.JLabel lblDepLon;
  private javax.swing.JLabel lblDepLonLabel;
  private javax.swing.JLabel lblDepRA;
  private javax.swing.JLabel lblDepRALabel;
  private javax.swing.JLabel lblDepVinf;
  private javax.swing.JLabel lblDepVinfLabel;
  private javax.swing.JLabel lblDepartPlanet;
  private javax.swing.JLabel lblDepartWeight;
  private javax.swing.JLabel lblDepartWeight1;
  private javax.swing.JLabel lblLaunchDec;
  private javax.swing.JLabel lblLaunchDecLabel;
  private javax.swing.JLabel lblLaunchLat;
  private javax.swing.JLabel lblLaunchLon;
  private javax.swing.JLabel lblLaunchRA;
  private javax.swing.JLabel lblLaunchRALabel;
  private javax.swing.JLabel lblLaunchWindow;
  private javax.swing.JLabel lblOutLabel;
  private javax.swing.JLabel lblOutward;
  private javax.swing.JLabel lblPeriapse;
  private javax.swing.JLabel lblProLabel;
  private javax.swing.JLabel lblProLabel1;
  private javax.swing.JLabel lblPrograde;
  private javax.swing.JLabel lblPrograde1;
  private javax.swing.JLabel lblTransAngle;
  private javax.swing.JLabel lblTransAngleLabel;
  private javax.swing.JLabel lblTransTime;
  private javax.swing.JLabel lblTransTimeLabel;
  private javax.swing.JLabel lblTransType;
  private javax.swing.JLabel lblTransTypeLabel;
  private javax.swing.JLabel lblTransferType;
  private javax.swing.JPanel panArrive;
  private javax.swing.JPanel panBottom;
  private javax.swing.JPanel panDepart;
  private javax.swing.JPanel panLaunch;
  private javax.swing.JPanel panLaunchWindow;
  private javax.swing.JPanel panOptimize;
  private javax.swing.JPanel panRight;
  private javax.swing.JPanel panTerminals;
  private javax.swing.JPanel panTrans;
  private javax.swing.JSpinner spnArrivePeriapse;
  private javax.swing.JSpinner spnArriveWeight;
  private javax.swing.JSpinner spnDepartPeriapse;
  private javax.swing.JSpinner spnDepartWeight;
  private javax.swing.JSpinner spnLaunchLat;
  private javax.swing.JSpinner spnLaunchLon;
  private javax.swing.JSpinner spnLaunchWindow;
  private javax.swing.JSpinner spnTransferType;
  private org.kwansystems.tools.time.TimePanel timArriveTime;
  private org.kwansystems.tools.time.TimePanel timDepartTime;
  // End of variables declaration//GEN-END:variables
    public void setModelVals() {
      model.setConstrainDepart(chkFreezeDepart.getModel().isSelected());
      model.setConstrainArrive(chkFreezeArrive.getModel().isSelected());
      model.setDepartWeight(((Integer)(spnDepartWeight.getModel().getValue())).intValue());
      model.setArriveWeight(((Integer)(spnArriveWeight.getModel().getValue())).intValue());
      model.setDepartHp(((Integer)(spnDepartPeriapse.getModel().getValue())).intValue());
      model.setArriveHp(((Integer)(spnArrivePeriapse.getModel().getValue())).intValue());
      model.setDepartPlanet(1+cboDepartPlanet.getSelectedIndex());
      model.setArrivePlanet(1+cboArrivePlanet.getSelectedIndex());
      model.setLaunchWindow(((Integer)(spnLaunchWindow.getModel().getValue())).intValue());
    }
    @Override public void updateDepartTime(Time departTime) {
      timDepartTime.setTime(departTime);
    }
    @Override public void updateArriveTime(Time arriveTime) { 
      timArriveTime.setTime(arriveTime);
    }
    @Override public void updateCourse(Course course) {
      PorkchopTrajectory[] traj=new PorkchopTrajectory[3];
      traj[0]=new PorkchopTrajectory(model.getDepartPlanet().Orbit.getStateTime(model.getCourse().depart.T), model.getCourse().arrive.T, new Color(  0,  0,255));
      traj[1]=new PorkchopTrajectory(model.getArrivePlanet().Orbit.getStateTime(model.getCourse().depart.T), model.getCourse().arrive.T, new Color(255,  0,  0));
      traj[2]=new PorkchopTrajectory(model.getCourse().depart,                                    model.getCourse().arrive.T, new Color(255,255,255));
      kOrbitCanvas1.setTraj(traj);
      Terminal depart=course.ResolveDeltaVdepart(model.getDepartPlanet(),model.getDepartHp());
      Terminal arrive=course.ResolveDeltaVarrive(model.getArrivePlanet(),model.getArriveHp());
      lblPrograde.setText(AutoRange.DisplayEngUnit(depart.getPro()));
      lblOutward.setText(AutoRange.DisplayEngUnit(depart.getOut()));
      lblChPlane.setText(AutoRange.DisplayEngUnit(depart.getChPl()));
      lblDepVinf.setText(AutoRange.DisplayEngUnit(depart.getVinf()));
      lblC3.setText(AutoRange.DisplayEngUnit(depart.getC3()/1e6));
      lblDVcirc.setText(AutoRange.DisplayEngUnit(depart.getDVcirc()));
      lblDVesc.setText(AutoRange.DisplayEngUnit(depart.getDVesc()));
      lblArrC3.setText(AutoRange.DisplayEngUnit(arrive.getC3()/1e6));
      lblArrDVcirc.setText(AutoRange.DisplayEngUnit(arrive.getDVcirc()));
      lblDVcap.setText(AutoRange.DisplayEngUnit(arrive.getDVesc()));
      lblArrVinf.setText(AutoRange.DisplayEngUnit(arrive.getVinf()));
      MathVector VinfEcl=depart.getVinfVec();
      MathVector LLR=Spheroid.xyz2llr(VinfEcl);
      lblDepLat.setText(AutoRange.DisplayEngUnit(Math.toDegrees(LLR.X())));
      lblDepLon.setText(AutoRange.DisplayEngUnit(Math.toDegrees(LLR.Y())));
      MathVector VinfEqu=EquToEcl.invTransform(VinfEcl);
      LLR=Spheroid.xyz2llr(VinfEqu);
      lblDepDec.setText(AutoRange.DisplayEngUnit(Math.toDegrees(LLR.X())));
      lblDepRA.setText(AutoRange.DisplayEngUnit(Math.toDegrees(LLR.Y())));
      double LaunchLat=Math.toRadians(((Double)spnLaunchLat.getModel().getValue()).doubleValue());
      double LaunchLon=Math.toRadians(((Double)spnLaunchLon.getModel().getValue()).doubleValue());
      MathVector xyzECEF=Spheroid.llr2xyz(LaunchLat,LaunchLon,1);
      MathVector xyzEqu=model.getDepartPlanet().Rot.getRotation(model.getCourse().depart.T).invTransform(xyzECEF);
      MathVector llrEqu=Spheroid.xyz2llr(xyzEqu);
      lblLaunchDec.setText(AutoRange.DisplayEngUnit(Math.toDegrees(llrEqu.X())));
      lblLaunchRA.setText(AutoRange.DisplayEngUnit(Math.toDegrees(llrEqu.Y())));
      TimeUnits Udif=(TimeUnits)(cboTransUnits.getModel().getSelectedItem());
      double Tdif=Time.difference(timDepartTime.getTime(), timArriveTime.getTime(), Udif);
      lblTransTime.setText(Udif.Format.format(Tdif));
      lblTransAngle.setText(AutoRange.DisplayEngUnit(Math.toDegrees(course.TransAngle)));
      lblTransType.setText(new org.kwansystems.tools.RomanNumeral(course.type).toRomanValue());
    }
    @Override public void updateDepartPlanet(Planet departPlanet) {  }
    @Override public void updateArrivePlanet(Planet arrivePlanet) {  }
    @Override public void updateConstrain(boolean constrainDepart, boolean constrainArrive) {  }
    @Override public void setModel(PorkchopModel Lmodel) {  }
    @Override public void updateDepartHp(double departHp) {  }
    @Override public void updateArriveHp(double arriveHp) {  }

    /**
     * Create the GUI and show it.  For thread safety,
     * this method should be invoked from the
     * event-dispatching thread.
     */
    private static void createAndShowGUI() {
      try {
        UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
      } catch (Throwable e) {
        throw new RuntimeException("Problem! ",e);
      }

      //Create and set up the window.
      JFrame frame = new JFrame("Porkchop");
      Porkchop TP = new Porkchop();
        
      frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

      //Set up the content pane.
      frame.getContentPane().add(TP);

      //Display the window.
      frame.pack();
      frame.setVisible(true);
    }

    public static void main(String[] args) {
      //Schedule a job for the event-dispatching thread:
      //creating and showing this application's GUI.
      javax.swing.SwingUtilities.invokeLater(new Runnable() {
        @Override public void run() {
          createAndShowGUI();
        }
      });
    }

}
