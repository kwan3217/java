package org.kwansystems.tools.chart;

import org.kwansystems.tools.chart.*;

public class XYPlot extends javax.swing.JFrame {
  private static final long serialVersionUID=742469480296732696L;
  public XYPlot(double [][]LXdata, double[][] LYdata, String[] LColumnNames) {
    initComponents();
    Xdata=LXdata;
    Ydata=LYdata;
    ColumnNames=LColumnNames;
    setAutoSize();
    EndOfChart();
  }
  boolean FirstData,FirstRow;
  double Xmin,Xmax,Ymin,Ymax;
  double[][] Xdata;
  double[][] Ydata;
  String[] ColumnNames;
  public void setSize(double LXmin, double LXmax, double LYmin, double LYmax) {
    Xmin=LXmin;
    Xmax=LXmax;
    Ymin=LYmin;
    Ymax=LYmax;
  }
  public void setAutoSize() {
    Xmin=Double.POSITIVE_INFINITY;
    Xmax=Double.NEGATIVE_INFINITY;
    Ymin=Double.POSITIVE_INFINITY;
    Ymax=Double.NEGATIVE_INFINITY;
    for(int i=0;i<Xdata.length;i++) {
      for(int j=0;j<Xdata[i].length;j++) {
        if(Ymin>Ydata[i][j]) Ymin=Ydata[i][j];
        if(Ymax<Ydata[i][j]) Ymax=Ydata[i][j];
        if(Xmin>Xdata[i][j]) Xmin=Xdata[i][j];
        if(Xmax<Xdata[i][j]) Xmax=Xdata[i][j];
      }
    }
    double[] Auto=AutoRange.calcAutoRange(Ymin,Ymax,5);
    Ymin=Auto[0];
    Ymax=Auto[1];
    YMaxLabel.setText(AutoRange.DisplayEngUnit(Ymax,0));
    YMinLabel.setText(AutoRange.DisplayEngUnit(Ymin,0));
    Auto=AutoRange.calcAutoRange(Xmin,Xmax,5);
    Xmin=Auto[0];
    Xmax=Auto[1];
    XMaxLabel.setText(AutoRange.DisplayEngUnit(Xmax,0));
    XMinLabel.setText(AutoRange.DisplayEngUnit(Xmin,0));
  }
  public void EndOfChart() {
    Canvas.Charts=Ydata;
    Canvas.T=Xdata[0];
    Canvas.TMin=Xmin; 
    Canvas.TMax=Xmax; 
    Canvas.YMin=Ymin; 
    Canvas.YMax=Ymax; 
    Canvas.ColumnNames=ColumnNames;
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        setVisible(true);
      }
    });
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    YMaxLabel = new javax.swing.JLabel();
    YMinLabel = new javax.swing.JLabel();
    XMinLabel = new javax.swing.JLabel();
    XMaxLabel = new javax.swing.JLabel();
    ChartPanel = new javax.swing.JPanel();
    YMouseLabel = new javax.swing.JLabel();
    XMouseLabel = new javax.swing.JLabel();

    getContentPane().setLayout(new java.awt.GridBagLayout());

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    YMaxLabel.setText("YMax");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
    getContentPane().add(YMaxLabel, gridBagConstraints);

    YMinLabel.setText("YMin");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
    getContentPane().add(YMinLabel, gridBagConstraints);

    XMinLabel.setText("XMin");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    getContentPane().add(XMinLabel, gridBagConstraints);

    XMaxLabel.setText("XMax");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
    getContentPane().add(XMaxLabel, gridBagConstraints);

    ChartPanel.setLayout(new java.awt.GridBagLayout());

    Canvas=new DisplayPrinterCanvas();
    ChartPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
    Canvas.setPreferredSize(new java.awt.Dimension(400, 400));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    ChartPanel.add(Canvas, gridBagConstraints);
    ChartPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
      public void mouseMoved(java.awt.event.MouseEvent evt) {
        ChartPanelMouseMoved(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.gridheight = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    getContentPane().add(ChartPanel, gridBagConstraints);

    YMouseLabel.setText("YMouse");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.weighty = 1.0;
    getContentPane().add(YMouseLabel, gridBagConstraints);

    XMouseLabel.setText("XMouse");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
    gridBagConstraints.weightx = 1.0;
    getContentPane().add(XMouseLabel, gridBagConstraints);

    pack();
  }

  private void ChartPanelMouseMoved(java.awt.event.MouseEvent evt) {
    double XMouse=evt.getPoint().x;
    double X=XMouse*Xmax/((double)(ChartPanel.getWidth()))+Xmin;
    double YExt=Ymax-Ymin;
    double YMouse=(double)(ChartPanel.getHeight())-evt.getPoint().y;
    double Y=YMouse*YExt/((double)(ChartPanel.getHeight()))+Ymin;
    YMouseLabel.setText(AutoRange.DisplayEngUnit(Y));
    XMouseLabel.setText(AutoRange.DisplayEngUnit(X));
  }

  public DisplayPrinterCanvas Canvas;
  private javax.swing.JPanel ChartPanel;
  private javax.swing.JLabel XMaxLabel;
  private javax.swing.JLabel XMinLabel;
  private javax.swing.JLabel XMouseLabel;
  private javax.swing.JLabel YMaxLabel;
  private javax.swing.JLabel YMinLabel;
  private javax.swing.JLabel YMouseLabel;
}
